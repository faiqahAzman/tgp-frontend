{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\Paynet Case Study\\\\frontend\\\\src\\\\components\\\\charts\\\\FinancialInclusionChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport Papa from \"papaparse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst indicatorMapping = {\n  \"Account ownership at a financial institution or with a mobile-money-service provider, female (% of population ages 15+)\": \"Female\",\n  \"Account ownership at a financial institution or with a mobile-money-service provider, male (% of population ages 15+)\": \"Male\",\n  \"Account ownership at a financial institution or with a mobile-money-service provider, older adults (% of population ages 25+)\": \"Older Adults\",\n  \"Account ownership at a financial institution or with a mobile-money-service provider, poorest 40% (% of population ages 15+)\": \"Poorest\",\n  \"Account ownership at a financial institution or with a mobile-money-service provider, primary education or less (% of population ages 15+)\": \"Primary Education or Less\",\n  \"Account ownership at a financial institution or with a mobile-money-service provider, richest 60% (% of population ages 15+)\": \"Richest\",\n  \"Account ownership at a financial institution or with a mobile-money-service provider, secondary education or more (% of population ages 15+)\": \"Secondary Education or More\",\n  \"Account ownership at a financial institution or with a mobile-money-service provider, young adults (% of population ages 15-24)\": \"Young Adults\"\n};\nconst AccountOwnershipChart = () => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch(\"/Cleaned_WDIEXCEL.csv\").then(response => {\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.text();\n    }).then(csvData => {\n      Papa.parse(csvData, {\n        header: true,\n        dynamicTyping: true,\n        complete: result => {\n          // Log result to inspect data\n          console.log(result.data);\n          const filteredData = result.data.filter(row => indicatorMapping[row[\"Indicator Name\"]]);\n          const transformedData = {};\n          filteredData.forEach(row => {\n            const year = row[\"Year\"];\n            const indicator = indicatorMapping[row[\"Indicator Name\"]];\n            const value = row[\"Value\"];\n            if (!transformedData[indicator]) {\n              transformedData[indicator] = {};\n            }\n            transformedData[indicator][year] = value;\n          });\n          const years = Object.keys(transformedData[Object.keys(transformedData)[0]]);\n          const datasets = Object.keys(transformedData).map(indicator => ({\n            label: indicator,\n            data: years.map(year => transformedData[indicator][year] || null),\n            borderColor: getRandomColor(),\n            fill: false\n          }));\n          setChartData({\n            labels: years,\n            datasets\n          });\n        },\n        error: parseError => {\n          setError(`Error parsing CSV: ${parseError.message}`);\n        }\n      });\n    }).catch(fetchError => {\n      setError(`Error fetching CSV: ${fetchError.message}`);\n    });\n  }, []);\n  const getRandomColor = () => {\n    return `hsl(${Math.random() * 360}, 70%, 50%)`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Account Ownership by Demographic Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this), chartData ? /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 48\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountOwnershipChart, \"IFJj7nSJvcbvx2I/MLqJX73o+2w=\");\n_c = AccountOwnershipChart;\nexport default AccountOwnershipChart;\nvar _c;\n$RefreshReg$(_c, \"AccountOwnershipChart\");","map":{"version":3,"names":["React","useEffect","useState","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Papa","jsxDEV","_jsxDEV","register","indicatorMapping","AccountOwnershipChart","_s","chartData","setChartData","error","setError","fetch","then","response","ok","Error","text","csvData","parse","header","dynamicTyping","complete","result","console","log","data","filteredData","filter","row","transformedData","forEach","year","indicator","value","years","Object","keys","datasets","map","label","borderColor","getRandomColor","fill","labels","parseError","message","catch","fetchError","Math","random","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["C:/Users/user/Downloads/Paynet Case Study/frontend/src/components/charts/FinancialInclusionChart.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\r\nimport Papa from \"papaparse\";\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\nconst indicatorMapping = {\r\n  \"Account ownership at a financial institution or with a mobile-money-service provider, female (% of population ages 15+)\": \"Female\",\r\n  \"Account ownership at a financial institution or with a mobile-money-service provider, male (% of population ages 15+)\": \"Male\",\r\n  \"Account ownership at a financial institution or with a mobile-money-service provider, older adults (% of population ages 25+)\": \"Older Adults\",\r\n  \"Account ownership at a financial institution or with a mobile-money-service provider, poorest 40% (% of population ages 15+)\": \"Poorest\",\r\n  \"Account ownership at a financial institution or with a mobile-money-service provider, primary education or less (% of population ages 15+)\": \"Primary Education or Less\",\r\n  \"Account ownership at a financial institution or with a mobile-money-service provider, richest 60% (% of population ages 15+)\": \"Richest\",\r\n  \"Account ownership at a financial institution or with a mobile-money-service provider, secondary education or more (% of population ages 15+)\": \"Secondary Education or More\",\r\n  \"Account ownership at a financial institution or with a mobile-money-service provider, young adults (% of population ages 15-24)\": \"Young Adults\",\r\n};\r\n\r\nconst AccountOwnershipChart = () => {\r\n  const [chartData, setChartData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/Cleaned_WDIEXCEL.csv\")\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Network response was not ok\");\r\n        }\r\n        return response.text();\r\n      })\r\n      .then((csvData) => {\r\n        Papa.parse(csvData, {\r\n          header: true,\r\n          dynamicTyping: true,\r\n          complete: (result) => {\r\n            // Log result to inspect data\r\n            console.log(result.data);\r\n\r\n            const filteredData = result.data.filter((row) => indicatorMapping[row[\"Indicator Name\"]]);\r\n            const transformedData = {};\r\n\r\n            filteredData.forEach((row) => {\r\n              const year = row[\"Year\"];\r\n              const indicator = indicatorMapping[row[\"Indicator Name\"]];\r\n              const value = row[\"Value\"];\r\n\r\n              if (!transformedData[indicator]) {\r\n                transformedData[indicator] = {};\r\n              }\r\n              transformedData[indicator][year] = value;\r\n            });\r\n\r\n            const years = Object.keys(transformedData[Object.keys(transformedData)[0]]);\r\n            const datasets = Object.keys(transformedData).map((indicator) => ({\r\n              label: indicator,\r\n              data: years.map((year) => transformedData[indicator][year] || null),\r\n              borderColor: getRandomColor(),\r\n              fill: false,\r\n            }));\r\n\r\n            setChartData({\r\n              labels: years,\r\n              datasets,\r\n            });\r\n          },\r\n          error: (parseError) => {\r\n            setError(`Error parsing CSV: ${parseError.message}`);\r\n          },\r\n        });\r\n      })\r\n      .catch((fetchError) => {\r\n        setError(`Error fetching CSV: ${fetchError.message}`);\r\n      });\r\n  }, []);\r\n\r\n  const getRandomColor = () => {\r\n    return `hsl(${Math.random() * 360}, 70%, 50%)`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Account Ownership by Demographic Group</h2>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      {chartData ? <Line data={chartData} /> : <p>Loading...</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountOwnershipChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}