{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\Paynet Case Study\\\\frontend\\\\src\\\\components\\\\charts\\\\FinancialInclusionChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport Papa from \"papaparse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst AccountOwnershipChart = () => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const [error, setError] = useState(null);\n  const [countries, setCountries] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState(\"\");\n  const [fullData, setFullData] = useState([]);\n  const processChartData = useCallback((data, country) => {\n    if (!data || data.length === 0) {\n      setError(`No data available for ${country}`);\n      setChartData(null);\n      return;\n    }\n    const countryData = data.filter(row => row.Country === country && row[\"Short Indicator\"]);\n    if (countryData.length === 0) {\n      setError(`No data found for ${country}`);\n      setChartData(null);\n      return;\n    }\n    setError(null);\n    const transformedData = {};\n    countryData.forEach(row => {\n      const indicator = row[\"Short Indicator\"];\n      Object.keys(row).forEach(key => {\n        if (!isNaN(key)) {\n          if (!transformedData[indicator]) {\n            transformedData[indicator] = {};\n          }\n          transformedData[indicator][key] = row[key];\n        }\n      });\n    });\n    const indicators = Object.keys(transformedData);\n    if (indicators.length === 0) {\n      setError(`No data found for ${country}`);\n      setChartData(null);\n      return;\n    }\n    const years = Object.keys(transformedData[indicators[0]]);\n    const datasets = indicators.map(indicator => ({\n      label: indicator,\n      data: years.map(year => transformedData[indicator][year] || null),\n      borderColor: getRandomColor(),\n      backgroundColor: \"rgba(0, 0, 0, 0.1)\",\n      pointRadius: 5,\n      borderWidth: 3,\n      fill: false\n    }));\n    setChartData({\n      labels: years,\n      datasets\n    });\n  }, []);\n  useEffect(() => {\n    fetch(\"/Cleaned_WDIEXCEL.csv\").then(response => response.text()).then(csvData => {\n      Papa.parse(csvData, {\n        header: true,\n        dynamicTyping: true,\n        complete: result => {\n          const data = result.data;\n          setFullData(data);\n          const uniqueCountries = [...new Set(data.map(row => row.Country))].filter(Boolean);\n          setCountries(uniqueCountries);\n          const defaultCountry = uniqueCountries.includes(\"Malaysia\") ? \"Malaysia\" : uniqueCountries[0] || \"\";\n          setSelectedCountry(defaultCountry);\n          if (defaultCountry) {\n            processChartData(data, defaultCountry);\n          }\n        },\n        error: parseError => {\n          setError(`Error parsing CSV: ${parseError.message}`);\n        }\n      });\n    }).catch(fetchError => {\n      setError(`Error fetching CSV: ${fetchError.message}`);\n    });\n  }, [processChartData]);\n  const getRandomColor = () => {\n    return `hsl(${Math.random() * 360}, 70%, 50%)`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl mx-auto p-6 bg-white shadow-lg rounded-xl border border-gray-200\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-gray-800 mb-6 text-center\",\n      children: \"\\uD83D\\uDCCA Account Ownership by Demographic Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 font-medium text-center\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"font-medium text-lg mr-2\",\n        children: \"Select Country:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"border rounded-lg px-4 py-2 bg-gray-50 focus:ring-2 focus:ring-blue-300\",\n        onChange: e => {\n          const newCountry = e.target.value;\n          setSelectedCountry(newCountry);\n          processChartData(fullData, newCountry);\n        },\n        value: selectedCountry,\n        children: countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: country,\n          children: country\n        }, country, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-blue-600 font-bold text-center mt-2\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this) : chartData && chartData.datasets.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-[800px] h-[900px] mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          // Allows custom width & height\n          plugins: {\n            legend: {\n              position: 'top'\n            }\n          },\n          scales: {\n            x: {\n              title: {\n                display: true,\n                text: 'Year'\n              }\n            },\n            y: {\n              title: {\n                display: true,\n                text: 'Percentage'\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500 text-center mt-4\",\n      children: \"\\uD83D\\uDCE1 Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountOwnershipChart, \"VlZp3oStNdKKPmzAGHGuMSgFPD0=\");\n_c = AccountOwnershipChart;\nexport default AccountOwnershipChart;\nvar _c;\n$RefreshReg$(_c, \"AccountOwnershipChart\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Papa","jsxDEV","_jsxDEV","register","AccountOwnershipChart","_s","chartData","setChartData","error","setError","countries","setCountries","selectedCountry","setSelectedCountry","fullData","setFullData","processChartData","data","country","length","countryData","filter","row","Country","transformedData","forEach","indicator","Object","keys","key","isNaN","indicators","years","datasets","map","label","year","borderColor","getRandomColor","backgroundColor","pointRadius","borderWidth","fill","labels","fetch","then","response","text","csvData","parse","header","dynamicTyping","complete","result","uniqueCountries","Set","Boolean","defaultCountry","includes","parseError","message","catch","fetchError","Math","random","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","newCountry","target","value","options","responsive","maintainAspectRatio","plugins","legend","position","scales","x","title","display","y","_c","$RefreshReg$"],"sources":["C:/Users/user/Downloads/Paynet Case Study/frontend/src/components/charts/FinancialInclusionChart.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\r\nimport Papa from \"papaparse\";\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\nconst AccountOwnershipChart = () => {\r\n  const [chartData, setChartData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [countries, setCountries] = useState([]);\r\n  const [selectedCountry, setSelectedCountry] = useState(\"\");\r\n  const [fullData, setFullData] = useState([]);\r\n\r\n  const processChartData = useCallback((data, country) => {\r\n    if (!data || data.length === 0) {\r\n      setError(`No data available for ${country}`);\r\n      setChartData(null);\r\n      return;\r\n    }\r\n  \r\n    const countryData = data.filter((row) => row.Country === country && row[\"Short Indicator\"]);\r\n  \r\n    if (countryData.length === 0) {\r\n      setError(`No data found for ${country}`);\r\n      setChartData(null);\r\n      return;\r\n    }\r\n  \r\n    setError(null);\r\n  \r\n    const transformedData = {};\r\n    countryData.forEach((row) => {\r\n      const indicator = row[\"Short Indicator\"];\r\n      Object.keys(row).forEach((key) => {\r\n        if (!isNaN(key)) {\r\n          if (!transformedData[indicator]) {\r\n            transformedData[indicator] = {};\r\n          }\r\n          transformedData[indicator][key] = row[key];\r\n        }\r\n      });\r\n    });\r\n  \r\n    const indicators = Object.keys(transformedData);\r\n    if (indicators.length === 0) {\r\n      setError(`No data found for ${country}`);\r\n      setChartData(null);\r\n      return;\r\n    }\r\n  \r\n    const years = Object.keys(transformedData[indicators[0]]);\r\n    const datasets = indicators.map((indicator) => ({\r\n      label: indicator,\r\n      data: years.map((year) => transformedData[indicator][year] || null),\r\n      borderColor: getRandomColor(),\r\n      backgroundColor: \"rgba(0, 0, 0, 0.1)\",\r\n      pointRadius: 5,\r\n      borderWidth: 3,\r\n      fill: false,\r\n    }));\r\n  \r\n    setChartData({ labels: years, datasets });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/Cleaned_WDIEXCEL.csv\")\r\n      .then((response) => response.text())\r\n      .then((csvData) => {\r\n        Papa.parse(csvData, {\r\n          header: true,\r\n          dynamicTyping: true,\r\n          complete: (result) => {\r\n            const data = result.data;\r\n            setFullData(data);\r\n\r\n            const uniqueCountries = [...new Set(data.map((row) => row.Country))].filter(Boolean);\r\n            setCountries(uniqueCountries);\r\n\r\n            const defaultCountry = uniqueCountries.includes(\"Malaysia\") ? \"Malaysia\" : uniqueCountries[0] || \"\";\r\n            setSelectedCountry(defaultCountry);\r\n\r\n            if (defaultCountry) {\r\n              processChartData(data, defaultCountry);\r\n            }\r\n          },\r\n          error: (parseError) => {\r\n            setError(`Error parsing CSV: ${parseError.message}`);\r\n          },\r\n        });\r\n      })\r\n      .catch((fetchError) => {\r\n        setError(`Error fetching CSV: ${fetchError.message}`);\r\n      });\r\n  }, [processChartData]);\r\n\r\n  const getRandomColor = () => {\r\n    return `hsl(${Math.random() * 360}, 70%, 50%)`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto p-6 bg-white shadow-lg rounded-xl border border-gray-200\">\r\n      <h2 className=\"text-2xl font-bold text-gray-800 mb-6 text-center\">📊 Account Ownership by Demographic Group</h2>\r\n\r\n      {error && <p className=\"text-red-500 font-medium text-center\">{error}</p>}\r\n\r\n      <div className=\"flex justify-center mb-6\">\r\n        <label className=\"font-medium text-lg mr-2\">Select Country:</label>\r\n        <select\r\n          className=\"border rounded-lg px-4 py-2 bg-gray-50 focus:ring-2 focus:ring-blue-300\"\r\n          onChange={(e) => {\r\n            const newCountry = e.target.value;\r\n            setSelectedCountry(newCountry);\r\n            processChartData(fullData, newCountry);\r\n          }}\r\n          value={selectedCountry}\r\n        >\r\n          {countries.map((country) => (\r\n            <option key={country} value={country}>{country}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {error ? (\r\n        <p className=\"text-blue-600 font-bold text-center mt-2\">{error}</p>\r\n      ) : chartData && chartData.datasets.length > 0 ? (\r\n        <div className=\"w-[800px] h-[900px] mx-auto\">\r\n  <Line data={chartData} options={{\r\n    responsive: true,\r\n    maintainAspectRatio: false,  // Allows custom width & height\r\n    plugins: { legend: { position: 'top' } },\r\n    scales: {\r\n      x: { title: { display: true, text: 'Year' } },\r\n      y: { title: { display: true, text: 'Percentage' } }\r\n    }\r\n  }} />\r\n</div>\r\n\r\n      ) : (\r\n        <p className=\"text-gray-500 text-center mt-4\">📡 Loading data...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountOwnershipChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}